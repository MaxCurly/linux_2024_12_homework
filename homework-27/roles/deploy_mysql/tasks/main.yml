---
# tasks file for deploy_mysql

- name: install mysql-client version={{ deploy_mysql_mysql_client_ver }}
  ansible.builtin.apt:
    name: "mysql-client"
    state: present

- name: create a directory {{ deploy_mysql_project_src }}
  ansible.builtin.file:
    path: "{{ deploy_mysql_project_src }}"
    state: directory
    mode: '0777'
    owner: root
    group: root

- name: create a directory {{ deploy_mysql_project_src }}/data
  ansible.builtin.file:
    path: "{{ deploy_mysql_project_src }}/data"
    state: directory
    mode: '0777'
    owner: root
    group: root

- name: template a file {{ deploy_mysql_project_src }}/my.cnf
  ansible.builtin.template:
    src: my.cnf.j2
    dest: "{{ deploy_mysql_project_src }}/my.cnf"
    owner: root
    group: root
    mode: '0444'
    backup: true
  notify: restart_mysql

- name: template a file {{ deploy_mysql_project_src }}/docker-compose.yml
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ deploy_mysql_project_src }}/docker-compose.yml"
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: restart_mysql

- name: create and start mysql version={{ deploy_mysql_image_version }}
  community.docker.docker_compose_v2:
    project_src: "{{ deploy_mysql_project_src }}"
    state: present

- name: pause for 15 seconds while mysql is starting
  ansible.builtin.pause:
    seconds: 15

- name: install PyMySQL version={{ deploy_PyMySQL_ver }}
  ansible.builtin.pip:
    name: "PyMySQL=={{ deploy_PyMySQL_ver }}"
    extra_args: --break-system-packages


- name: create database {{ deploy_mysql_db_name }}
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ deploy_mysql_root_pass }}"
    name: "{{ deploy_mysql_db_name }}"
    state: present
  when: deploy_mysql_role == "master"

- name: create database user {{ deploy_mysql_db_user }}
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ deploy_mysql_root_pass }}"
    name: "{{ deploy_mysql_db_user }}"
    host: '%'
    password: "{{ deploy_mysql_db_password }}"
    priv: "{{ deploy_mysql_db_name }}.*:ALL"
    state: present
  when: deploy_mysql_role == "master"